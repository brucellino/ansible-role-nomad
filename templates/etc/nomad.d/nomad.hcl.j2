# Main variables
datacenter = "[[ nomad_datacenter ]]"
data_dir = "[[ nomad_data_dir ]]"

[% if autopilot_enabled %]
autopilot {
  cleanup_dead_servers      = true
  last_contact_threshold    = "200ms"
  max_trailing_logs         = 250
  server_stabilization_time = "10s"
}
[% endif %]

[% if server | bool %]
server {
  enabled = true
  raft_protocol = 3
[% if consul_enabled %]
  server_join {
    retry_join = [ "nomad.service.consul" ]
  }
[% endif %]
  node_gc_threshold = "1h"
  job_gc_interval = "5m"
  job_gc_threshold = "30m"
  eval_gc_threshold = "24h"

  heartbeat_grace = "20s"
  min_heartbeat_ttl = "30s"
  non_voting_server = false

  rejoin_after_leave = true

  search {
    fuzzy_enabled = true
    limit_query = 10
    limit_results = 100
    min_term_length = 5
  }

}
[% else %]

client {
  enabled = true
  disable_remote_exec = false
  node_class = [[ ansible_userspace_bits ]]
[% if consul_enabled %]
  server_join {
    retry_join = ["nomad.service.consul"]
  }
  # volume configuration

  # meta configuration
[% else %]
# This should be a variable list
  server_join {
    retry_join = ["bare", "sense", "pi3"]
  }
[% endif %]
[% for hv in nomad_host_volumes %]
  host_volume "[[ hv.name ]]" {
    path = "/data/[[ hv.path ]]"
    read_only = false
  }
[% endfor %]
  artifact {
    decompression_file_count_limit = 0
  }
}
[% endif %]

acl {
  enabled = false
}

[% if consul_enabled %]
consul {
  address             = "127.0.0.1:8500"
  server_service_name = "nomad"
  client_service_name = "nomad-client"
  auto_advertise      = true
  server_auto_join    = true
  client_auto_join    = true
  tags = ["nomad", "ansible-managed"]
  timeout = "30s"

  # token = ""
  # ssl = false
  # key_file = ""

}
[% endif  %]
[% if enable_raw_exec %]
plugin "raw_exec" {
  config {
    enabled = true
    no_cgroups = true
  }
}
[% endif %]

[% if enable_podman %]
plugin "nomad-driver-podman" {
  config {
    recover_stopped = true
    extra_labels = ["job_name"]
    gc {
      container = true
    }
  }
}
[% endif %]

vault {
  enabled = [[ enable_vault | bool | lower ]]
  address = "http://active.vault.service.consul:8200"
  token = "token"
}

telemetry {
  collection_interval = "1s"
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
}
